<?xml version="1.0" encoding="US-ASCII"?>
<!---------------------------------------------------------------->

<!-- User wants to control the flow of the presentation with pause, resume or previous -->

<!-- User asks for a pause -->
<recipe name="user_asks_for_pause">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions that recieve a greet using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option"  rel="equal" val="pause" />
        <slot name="confidence" rel=">" val="0.4" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="pause_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid repeating the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="pause_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- Action for game -->
    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="pause"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>

<!---------------------------------------------------------------->

<!-- User asks to continue-->
<recipe name="user_asks_for_resume">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions that recieve a greet using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option"  rel="equal" val="resume" />
    <slot name="confidence" rel=">" val="0.4" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="resume_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid repeating the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="resume_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- Action for game -->
    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="resume"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>

<!---------------------------------------------------------------->
<!-- User asks to repeat previous part-->
<recipe name="user_asks_for_previous">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions that recieve a greet using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option"  rel="equal" val="previous" />
    <slot name="confidence" rel=">" val="0.4" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="previous_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid repeating the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="previous_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- Action for game -->
    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="previous"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>

<!---------------------------------------------------------------->

<!-- User asks to pass to next part-->
<recipe name="user_asks_for_next">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions that recieve a greet using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option"  rel="equal" val="next" />
        <slot name="confidence" rel=">" val="0.4" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="next_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid repeating the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="next_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- Action for game -->
    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="next"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>

<!---------------------------------------------------------------->

<!-- User asks to repeat previous part-->
<recipe name="user_asks_for_stop">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions that recieve a greet using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option"  rel="equal" val="stop" />
        <slot name="confidence" rel=">" val="0.4" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="stop_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid repeating the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="stop_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- Action for game -->
    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="stop"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>

<!---------------------------------------------------------------->

<!-- User asks to restart the game-->
<recipe name="user_asks_for_restart">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions that recieve a greet using a loquendo semantic grammar-->
        <slot name="type" val="asr_googleOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option"  rel="equal" val="restart" />
        <slot name="confidence" rel=">" val="0.4" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="restart_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid repeating the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="restart_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- Action for game -->
    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="restart"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>
<!-- user asks to say hello -->
<recipe name="ask_hello">
 <precondition>
  <atom quantifier="exist">
      <slot name="type" val="asr_googleOK"/>
      <slot name="subtype" val="user"/>
      <slot name="consumed" val="false" rel="equal"/>
      <slot name="game_dialog_option" rel="equal" val="hello" />
      <slot name="this" rel="bind" var="ask_hello_atom"/>
   </atom>
</precondition>

  <body order="sequence">

  <!-- Consume the atom to avoid the repetition of the recipe again -->
    <assignment>
    <atom>
      <slot name="this" var="ask_hello_atom"/>
      <slot name="consumed" val="true"/>
    </atom>
  </assignment>

    <goal recipe_name="say_hello" initiator="any"/>
</body>
</recipe>
<!-- say hello -->
<recipe name="say_hello">

  <body order="sequence">

    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="Hola"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="emotion"  value="happy"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
    </action>
  </body>
</recipe>
