<?xml version="1.0" encoding="US-ASCII"?>

<recipe name="games_start">
  <precondition>
    <atom quatifier="exist">
        <slot name="type" val="state_machine_update"/>
        <slot name="subtype" val="user"/>
        <slot name="state" val="games" rel="equal"/>
        <slot name="consumed" val="false" rel="equal"/>
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="games_start_atom"/>
    </atom>
  </precondition>

  <body order="sequence">

    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="a qué juego quieres jugar,"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
      </action>

    <action name="liveliness_status_update" actor="show_liveliness">
        <roboml:args>
            <arg name="status" value="talking" type="string"/>
        </roboml:args>
     </action>
     
    <!-- Add the grammar for the presentation-->
    <action name="add_grammar" actor="asr">
        <roboml:args>
            <arg name="grammar" value="alz_games.gram" type="string"/>           
        </roboml:args>
     </action>
    
    <!-- Execute the recipe to select a game -->
    <goal recipe_name="select_game" initiator="any"/>
    
    <!-- Execute the recipe that waits for the presentation to end -->
    <goal recipe_name="exit_games_topic, exit_games" initiator="any"/>
    
    <!-- Action for game -->
    <action name="games_handler_request" actor="GAMES_HANDLER_REQUEST">
      <roboml:args>
          <arg name="game_to_play"  value="exit"  type="string"/>
      </roboml:args>
    </action>
    
    <!-- The 'state' atom is consumed here when we leave the games state -->
    <assignment>
      <atom>
        <slot name="this" var="games_start_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <!-- To remove the games grammar. There is no delete, so we set the general grammar again-->
    <action name="set_grammar" actor="asr">
        <roboml:args>
        <arg name="grammar" value="alz_general.gram" type="string"/>
        </roboml:args>
    </action>

    <action name="request_state" actor="state_machine_node">
      <roboml:args>
          <arg name="state"  value="waiting"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>


<!------------------GAME'S MENU OPTIONS------------------------>

<!-- Recipe to answer the question of which game does the user want -->
<recipe name="select_game">
  <precondition>
      
  </precondition>

  <body order="sequence">
    <!-- non verbal sound of hello-->
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="CONFIRMATION"   type="string"/>
          <arg name="engine"  value="non_verbal"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
    </action>

    <!--<goal recipe_name="games_list, game_random, game_request, no_game_selection" initiator="any"/>-->
    <goal recipe_name="games_list, game_random, no_game_selection, game_request" initiator="any"/>
  </body>
</recipe>

<!---------------------------------------------------------------->
<!-- Send a petition to give the user a list of the possible games -->
<recipe name="games_list">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions to receive an "asr_ok" using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option" rel="equal" val="games_list" />
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="games_list_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <assignment>
      <atom>
        <slot name="this" var="games_list_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>
    
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="CONFIRMATION"   type="string"/>
          <arg name="engine"  value="non_verbal"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
    </action>
    
    <!--<action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="esta es la lista de juegos. a cual quieres jugar,"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
      </action>-->

    <!-- Action for send the petition to the game handler program -->
    <action name="games_handler_request" actor="GAMES_HANDLER_REQUEST">
      <roboml:args>
          <arg name="game_to_play"  value="list"  type="string"/>
      </roboml:args>
    </action>

    <goal recipe_name="select_game" initiator="any"/>
  </body>
</recipe>

<!---------------------------------------------------------------->
<!-- Send a petition to play a random game -->
<recipe name="game_random">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions to receive an "asr_ok" using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option" rel="equal" val="game_random" />
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <!-- asignamos un nombre a este atomo para poder referirnos a él-->
        <slot name="this" rel="bind" var="game_random_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid the repetition of the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="game_random_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>
    
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="elijo un juego aleatorio"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
      </action>

    <!-- Action for send the petition to the game handler program -->
    <action name="games_handler_request" actor="GAMES_HANDLER_REQUEST">
      <roboml:args>
          <arg name="game_to_play"  value="random"  type="string"/>
      </roboml:args>
    </action>

    <goal recipe_name="game_request_top" initiator="any"/>
  </body>
</recipe>

<!---------------------------------------------------------------->
<!-- Send a petition to end the games scenario -->
<recipe name="no_game_selection">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions to receive an "asr_ok" using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option" rel="equal" val="no_game" />
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <slot name="this" rel="bind" var="no_game_selection_atom"/>
     </atom>
  </precondition>

  <body order="sequence">
    <assignment>
      <atom>
        <slot name="this" var="no_game_selection_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="jo, qué pena."   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
      </action>

    <!-- Action for send the petition to the game handler program -->
    <action name="exit_games_scenario" actor="EXIT_GAMES_SCENARIO">
      <roboml:args>
          <arg name="exit_games"  value="yes"  type="string"/>
      </roboml:args>
    </action>

  </body>
</recipe>


<!----------------RECIPES TO HANDLE THE GAME----------------------->

<!-- Generic recipe to recive a game request from the user-->
<recipe name="game_request">
  <precondition>
    <atom quantifier="exist">
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <slot name="game_option" rel="bind" var="option_var" />
        <slot name="game_grammar" rel="bind" var="game_grammar_var" />
        <slot name="this" rel="bind" var="game_request_atom"/>
     </atom>
  </precondition>

  <body order="sequence">
      
    <assignment>
    <atom>
        <slot name="this" var="game_request_atom"/>
        <slot name="consumed" val="true"/>
    </atom>
    </assignment>
    
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="CONFIRMATION"   type="string"/>
          <arg name="engine"  value="non_verbal"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
    </action>
    
    <!-- Add the grammar for the game-->
    <!--<action name="add_grammar" actor="asr">
        <roboml:args>
            <arg name="grammar" value="alz_game_grammar/$game_grammar_var" type="string"/>
        </roboml:args>
     </action>-->
    
    <!-- Action for game -->
    <action name="games_handler_request" actor="GAMES_HANDLER_REQUEST">
      <roboml:args>
          <arg name="game_to_play"  value="$option_var"  type="string"/>
      </roboml:args>
    </action>
  </body>
  
</recipe>

<!---------------------------------------------------------------->
<!-- Generic recipe to recive a game request from a topic -->
<recipe name="game_request_top">
  <precondition>
    <atom>
      <slot name="type" val="games_handler_response"/>
      <slot name="subtype" val="user"/>
      <slot name="game_response" rel="bind" var="option_var" />
      <slot name="consumed" val="false" rel="equal"/>
      <slot name="this" rel="bind" var="game_request_top_atom"/>
    </atom>
  </precondition>

  <body order="sequence">
      
    <assignment>
    <atom>
        <slot name="this" var="game_request_top_atom"/>
        <slot name="consumed" val="true"/>
    </atom>
    </assignment>
    
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="CONFIRMATION"   type="string"/>
          <arg name="engine"  value="non_verbal"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
    </action>
    
    <!-- Add the grammar for the game-->                                               
    <action name="add_grammar" actor="asr">
        <roboml:args>
            <arg name="grammar" value="alz_game_grammar/alz_$option_var.gram" type="string"/>
        </roboml:args>
     </action>
    
    <!-- Action for game -->
    <action name="games_handler_request" actor="GAMES_HANDLER_REQUEST">
      <roboml:args>
          <arg name="game_to_play"  value="$option_var"  type="string"/>
      </roboml:args>
    </action>
  </body>
  
</recipe>

<!---------------------------------------------------------------->
<!-- When the user wants to stop the game-->
<recipe name="game_flow_command">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions to receive an "asr_ok" using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_flow_command" rel="bind" var="option_command" />
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <slot name="this" rel="bind" var="game_flow_command_atom"/>
     </atom>
  </precondition>

  <body order="sequence">
      
    <assignment>
    <atom>
        <slot name="this" var="game_flow_command_atom"/>
        <slot name="consumed" val="true"/>
    </atom>
    </assignment>

    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="CONFIRMATION"   type="string"/>
          <arg name="engine"  value="non_verbal"  type="string"/>
          <arg name="priority" value="SHUTUP_IMMEDIATLY_AND_SAY_SENTENCE" type="string"/>
      </roboml:args>
    </action>
         
    <!-- Action for game -->
    <action name="games_handler_request" actor="GAMES_HANDLER_REQUEST">
      <roboml:args>
          <arg name="game_to_play"  value="$option_command"  type="string"/>
      </roboml:args>
    </action>

  </body>
  
</recipe>

<!---------------------------------------------------------------->
<!-- Robot advertises when the game finishes -->
<recipe name="game_finished">
  <precondition>
    <atom>
      <slot name="type" val="game_activity_finished"/>
      <slot name="subtype" val="user"/>
      <slot name="finish_game" val="yes" rel="equal" />
      <slot name="consumed" val="false" rel="equal"/>
      <slot name="this" rel="bind" var="game_finished_atom"/>
    </atom>
  </precondition>

  <body order="sequence">
    <assignment>
      <atom>
        <slot name="this" var="game_finished_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>
    
    <goal recipe_name="game_remove_grammar" initiator="any"/>
     
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="A qué juego quieres jugar ahora?"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="SHUTUP_IMMEDIATLY_AND_SAY_SENTENCE" type="string"/>
      </roboml:args>
    </action>
    
    <goal recipe_name="select_game" initiator="any"/>
  </body>
</recipe>

<!---------------------------------------------------------------->
<!-- Generic recipe to recive an answer of the game -->
<recipe name="game_user_answer">
  <precondition>
    <atom quantifier="exist">
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <slot name="game_command" rel="bind" var="option_var" />
        <slot name="this" rel="bind" var="game_user_answer_atom"/>
     </atom>
  </precondition>

  <body order="sequence">
    <assignment>
    <atom>
        <slot name="this" var="game_user_answer_atom"/>
        <slot name="consumed" val="true"/>
    </atom>
    </assignment>
    
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="CONFIRMATION"   type="string"/>
          <arg name="engine"  value="non_verbal"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
    </action>

    <action name="game_session_alz" actor="alz_game_session">
      <roboml:args>
          <arg name="game_to_play"  value="$option_var"  type="string"/>
      </roboml:args>
    </action>

    <!--<action name="game_answer" actor="GAMES_USER_ANSWER">
      <roboml:args>
          <arg name="user_answer"  value="$answer_var"  type="string"/>
      </roboml:args>
    </action>-->

    </body>
</recipe>


<!----------------RECIPES TO FINISH GAMES SCENARIO---------------->

<!-- When the presenter asks for the presentation to end-->
<recipe name="exit_games_topic">
  <precondition>
    <atom>
      <slot name="type" val="exit_games_scenario"/>
      <slot name="subtype" val="user"/>
      <slot name="exit_games" val="yes" rel="equal" />
      <slot name="consumed" val="false" rel="equal"/>
      <slot name="this" rel="bind" var="exit_game_topic_atom"/>
    </atom>
  </precondition>

  <body order="sequence">

    <assignment>
      <atom>
        <slot name="this" var="exit_game_topic_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>-->

    <!-- Yawn with etts (to make sure the next time the robot speaks it's ok)-->
    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="\\item=Breath_03"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
      </action>

  </body>
</recipe>

<!-- When the presenter asks for the presentation to end-->
<recipe name="exit_games">
  <precondition>
    <atom quantifier="exist">
        <!-- Conditions to receive an "asr_ok" using a loquendo semantic grammar-->
        <slot name="type" val="asr_loquendoOK"/>
        <slot name="subtype" val="user"/>
        <slot name="consumed" val="false" rel="equal"/>
        <slot name="game_dialog_option" rel="equal" val="exit_games_scenario" />
        <slot name="confidence" rel=">" val="0.45" type="number" />
        <slot name="this" rel="bind" var="exit_game_atom"/>
     </atom>
  </precondition>

  <body order="sequence">

    <!-- Consume the atom to avoid the repetition of the recipe again -->
    <assignment>
      <atom>
        <slot name="this" var="exit_game_atom"/>
        <slot name="consumed" val="true"/>
      </atom>
    </assignment>

    <action name="say_text" actor="etts">
      <roboml:args>
          <arg name="sentence"  value="\\item=Breath_03 \\pause=1500 \\emphasis-- De acuerdo"   type="string"/>
          <arg name="engine"  value="loquendo"  type="string"/>
          <arg name="priority" value="QUEUE_SENTENCE" type="string"/>
      </roboml:args>
      </action>

  </body>
</recipe>


<!---------------------AUXILIAR RECIPES-------------------------->

<!-- recipe to remove the game grammar-->
<recipe name="game_remove_grammar">
  <precondition>
  </precondition>
  <body order="sequence">
    <!-- To remove the games grammar. There is no delete, so we set the general grammar again-->
    <action name="set_grammar" actor="asr">
        <roboml:args>
        <arg name="grammar" value="alz_general.gram" type="string"/>
        </roboml:args>
    </action>
    
    <!-- Add the grammar for the presentation-->
    <action name="add_grammar" actor="asr">
        <roboml:args>
            <arg name="grammar" value="alz_games.gram" type="string"/>           
        </roboml:args>
     </action>
  </body>
</recipe>






